import {
  __commonJS,
  __name
} from "./chunk-4OCRLPSA.js";

// node_modules/fractional-index/index.js
var require_fractional_index = __commonJS({
  "node_modules/fractional-index/index.js"(exports, module) {
    var ZERO = 32;
    var UPPER_LIMIT = 127;
    function fractionalIndex(a, b) {
      if (a === null) {
        a = "";
      }
      if (b !== null && a >= b) {
        throw new Error(a + " >= " + b);
      }
      if (a.slice(-1) === String.fromCharCode(ZERO) || b && b.slice(-1) === String.fromCharCode(ZERO)) {
        throw new Error("trailing zero");
      }
      if (b) {
        let n = 0;
        while ((a.charAt(n) || String.fromCharCode(ZERO)) === b.charAt(n)) {
          n++;
        }
        if (n > 0) {
          return b.slice(0, n) + fractionalIndex(a.slice(n), b.slice(n));
        }
      }
      const digitA = a ? a.charCodeAt(0) : ZERO;
      const digitB = b !== null ? b.charCodeAt(0) : UPPER_LIMIT;
      if (digitB - digitA > 1) {
        const midDigit = Math.round(0.5 * (digitA + digitB));
        return String.fromCharCode(midDigit);
      } else {
        if (b && b.length > 1) {
          return b.slice(0, 1);
        } else {
          return String.fromCharCode(digitA) + fractionalIndex(a.slice(1), null);
        }
      }
    }
    __name(fractionalIndex, "fractionalIndex");
    fractionalIndex.ZERO = ZERO;
    fractionalIndex.UPPER_LIMIT = UPPER_LIMIT;
    module.exports = fractionalIndex;
  }
});
export default require_fractional_index();
//# sourceMappingURL=fractional-index.js.map
