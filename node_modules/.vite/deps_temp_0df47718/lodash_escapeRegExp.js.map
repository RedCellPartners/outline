{
  "version": 3,
  "sources": ["../../lodash/escapeRegExp.js"],
  "sourcesContent": ["var toString = require('./toString');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nmodule.exports = escapeRegExp;\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;AAAA,QAAI,WAAW;AAMf,QAAI,eAAe;AAAnB,QACI,kBAAkB,OAAO,aAAa,MAAM;AAiBhD,aAAS,aAAa,QAAQ;AAC5B,eAAS,SAAS,MAAM;AACxB,aAAQ,UAAU,gBAAgB,KAAK,MAAM,IACzC,OAAO,QAAQ,cAAc,MAAM,IACnC;AAAA,IACN;AALS;AAOT,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
