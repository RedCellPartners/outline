import {
  require_react
} from "./chunk-NSZELEHI.js";
import {
  __name,
  __toESM
} from "./chunk-4OCRLPSA.js";

// node_modules/reakit/es/_rollupPluginBabelHelpers-1f0bf8c2.js
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
__name(_defineProperty, "_defineProperty");
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
__name(ownKeys, "ownKeys");
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
__name(_objectSpread2, "_objectSpread2");
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
__name(_objectWithoutPropertiesLoose, "_objectWithoutPropertiesLoose");
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
__name(_unsupportedIterableToArray, "_unsupportedIterableToArray");
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
__name(_arrayLikeToArray, "_arrayLikeToArray");
function _createForOfIteratorHelperLoose(o, allowArrayLike) {
  var it;
  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      return function() {
        if (i >= o.length) return {
          done: true
        };
        return {
          done: false,
          value: o[i++]
        };
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  it = o[Symbol.iterator]();
  return it.next.bind(it);
}
__name(_createForOfIteratorHelperLoose, "_createForOfIteratorHelperLoose");

// node_modules/reakit-system/es/useCreateElement.js
var import_react2 = __toESM(require_react());

// node_modules/reakit-system/es/SystemContext.js
var import_react = __toESM(require_react());
var SystemContext = (0, import_react.createContext)({});

// node_modules/reakit-system/es/_rollupPluginBabelHelpers-0c84a174.js
function _defineProperty2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
__name(_defineProperty2, "_defineProperty");
function ownKeys2(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
__name(ownKeys2, "ownKeys");
function _objectSpread22(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys2(Object(source), true).forEach(function(key) {
        _defineProperty2(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys2(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
__name(_objectSpread22, "_objectSpread2");
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
__name(_objectWithoutPropertiesLoose2, "_objectWithoutPropertiesLoose");
function _unsupportedIterableToArray2(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray2(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray2(o, minLen);
}
__name(_unsupportedIterableToArray2, "_unsupportedIterableToArray");
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
__name(_arrayLikeToArray2, "_arrayLikeToArray");
function _createForOfIteratorHelperLoose2(o, allowArrayLike) {
  var it;
  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray2(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      return function() {
        if (i >= o.length) return {
          done: true
        };
        return {
          done: false,
          value: o[i++]
        };
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  it = o[Symbol.iterator]();
  return it.next.bind(it);
}
__name(_createForOfIteratorHelperLoose2, "_createForOfIteratorHelperLoose");

// node_modules/reakit-system/es/useCreateElement.js
function isRenderProp(children) {
  return typeof children === "function";
}
__name(isRenderProp, "isRenderProp");
var useCreateElement = /* @__PURE__ */ __name(function useCreateElement2(type, props, children) {
  if (children === void 0) {
    children = props.children;
  }
  var context = (0, import_react2.useContext)(SystemContext);
  if (context.useCreateElement) {
    return context.useCreateElement(type, props, children);
  }
  if (typeof type === "string" && isRenderProp(children)) {
    var _ = props.children, rest = _objectWithoutPropertiesLoose2(props, ["children"]);
    return children(rest);
  }
  return (0, import_react2.createElement)(type, props, children);
}, "useCreateElement");

// node_modules/reakit-utils/es/isObject.js
function isObject(arg) {
  return typeof arg === "object" && arg != null;
}
__name(isObject, "isObject");

// node_modules/reakit-utils/es/isPlainObject.js
function isPlainObject(arg) {
  var _proto$constructor;
  if (!isObject(arg)) return false;
  var proto = Object.getPrototypeOf(arg);
  if (proto == null) return true;
  return ((_proto$constructor = proto.constructor) === null || _proto$constructor === void 0 ? void 0 : _proto$constructor.toString()) === Object.toString();
}
__name(isPlainObject, "isPlainObject");

// node_modules/reakit-utils/es/shallowEqual.js
function shallowEqual(objA, objB) {
  if (objA === objB) return true;
  if (!objA) return false;
  if (!objB) return false;
  if (typeof objA !== "object") return false;
  if (typeof objB !== "object") return false;
  var aKeys = Object.keys(objA);
  var bKeys = Object.keys(objB);
  var length = aKeys.length;
  if (bKeys.length !== length) return false;
  for (var _i = 0, _aKeys = aKeys; _i < _aKeys.length; _i++) {
    var key = _aKeys[_i];
    if (objA[key] !== objB[key]) {
      return false;
    }
  }
  return true;
}
__name(shallowEqual, "shallowEqual");

// node_modules/reakit-system/es/createComponent.js
var import_react3 = __toESM(require_react());

// node_modules/reakit-utils/es/_rollupPluginBabelHelpers-1f0bf8c2.js
function _defineProperty3(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
__name(_defineProperty3, "_defineProperty");
function ownKeys3(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }
  return keys;
}
__name(ownKeys3, "ownKeys");
function _objectSpread23(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys3(Object(source), true).forEach(function(key) {
        _defineProperty3(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys3(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
__name(_objectSpread23, "_objectSpread2");
function _objectWithoutPropertiesLoose3(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }
  return target;
}
__name(_objectWithoutPropertiesLoose3, "_objectWithoutPropertiesLoose");
function _unsupportedIterableToArray3(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray3(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray3(o, minLen);
}
__name(_unsupportedIterableToArray3, "_unsupportedIterableToArray");
function _arrayLikeToArray3(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
  return arr2;
}
__name(_arrayLikeToArray3, "_arrayLikeToArray");
function _createForOfIteratorHelperLoose3(o, allowArrayLike) {
  var it;
  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray3(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      return function() {
        if (i >= o.length) return {
          done: true
        };
        return {
          done: false,
          value: o[i++]
        };
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  it = o[Symbol.iterator]();
  return it.next.bind(it);
}
__name(_createForOfIteratorHelperLoose3, "_createForOfIteratorHelperLoose");

// node_modules/reakit-utils/es/splitProps.js
function __deprecatedSplitProps(props, keys) {
  var propsKeys = Object.keys(props);
  var picked = {};
  var omitted = {};
  for (var _i = 0, _propsKeys = propsKeys; _i < _propsKeys.length; _i++) {
    var key = _propsKeys[_i];
    if (keys.indexOf(key) >= 0) {
      picked[key] = props[key];
    } else {
      omitted[key] = props[key];
    }
  }
  return [picked, omitted];
}
__name(__deprecatedSplitProps, "__deprecatedSplitProps");
function splitProps(props, keys) {
  if (keys === void 0) {
    keys = [];
  }
  if (!isPlainObject(props.state)) {
    return __deprecatedSplitProps(props, keys);
  }
  var _deprecatedSplitProp = __deprecatedSplitProps(props, [].concat(keys, ["state"])), picked = _deprecatedSplitProp[0], omitted = _deprecatedSplitProp[1];
  var state = picked.state, restPicked = _objectWithoutPropertiesLoose3(picked, ["state"]);
  return [_objectSpread23(_objectSpread23({}, state), restPicked), omitted];
}
__name(splitProps, "splitProps");

// node_modules/reakit-utils/es/normalizePropsAreEqual.js
function normalizePropsAreEqual(propsAreEqual2) {
  if (propsAreEqual2.name === "normalizePropsAreEqualInner") {
    return propsAreEqual2;
  }
  return /* @__PURE__ */ __name(function normalizePropsAreEqualInner(prev, next) {
    if (!isPlainObject(prev.state) || !isPlainObject(next.state)) {
      return propsAreEqual2(prev, next);
    }
    return propsAreEqual2(_objectSpread23(_objectSpread23({}, prev.state), prev), _objectSpread23(_objectSpread23({}, next.state), next));
  }, "normalizePropsAreEqualInner");
}
__name(normalizePropsAreEqual, "normalizePropsAreEqual");

// node_modules/reakit-system/es/createComponent.js
function forwardRef(component) {
  return (0, import_react3.forwardRef)(component);
}
__name(forwardRef, "forwardRef");
function memo(component, propsAreEqual2) {
  return (0, import_react3.memo)(component, propsAreEqual2);
}
__name(memo, "memo");
function createComponent(_ref) {
  var type = _ref.as, useHook = _ref.useHook, shouldMemo = _ref.memo, _ref$propsAreEqual = _ref.propsAreEqual, propsAreEqual2 = _ref$propsAreEqual === void 0 ? useHook === null || useHook === void 0 ? void 0 : useHook.unstable_propsAreEqual : _ref$propsAreEqual, _ref$keys = _ref.keys, keys = _ref$keys === void 0 ? (useHook === null || useHook === void 0 ? void 0 : useHook.__keys) || [] : _ref$keys, _ref$useCreateElement = _ref.useCreateElement, useCreateElement$1 = _ref$useCreateElement === void 0 ? useCreateElement : _ref$useCreateElement;
  var Comp = /* @__PURE__ */ __name(function Comp2(_ref2, ref) {
    var _ref2$as = _ref2.as, as = _ref2$as === void 0 ? type : _ref2$as, props = _objectWithoutPropertiesLoose2(_ref2, ["as"]);
    if (useHook) {
      var _as$render;
      var _splitProps = splitProps(props, keys), _options = _splitProps[0], htmlProps = _splitProps[1];
      var _useHook = useHook(_options, _objectSpread22({
        ref
      }, htmlProps)), wrapElement = _useHook.wrapElement, elementProps = _objectWithoutPropertiesLoose2(_useHook, ["wrapElement"]);
      var asKeys = ((_as$render = as.render) === null || _as$render === void 0 ? void 0 : _as$render.__keys) || as.__keys;
      var asOptions = asKeys && splitProps(props, asKeys)[0];
      var allProps = asOptions ? _objectSpread22(_objectSpread22({}, elementProps), asOptions) : elementProps;
      var _element = useCreateElement$1(as, allProps);
      if (wrapElement) {
        return wrapElement(_element);
      }
      return _element;
    }
    return useCreateElement$1(as, _objectSpread22({
      ref
    }, props));
  }, "Comp");
  if (useHook) {
    Comp.displayName = useHook.name.replace(/^(unstable_)?use/, "");
  }
  Comp = forwardRef(Comp);
  if (shouldMemo) {
    Comp = memo(Comp, propsAreEqual2 && normalizePropsAreEqual(propsAreEqual2));
  }
  Comp.__keys = keys;
  Comp.unstable_propsAreEqual = normalizePropsAreEqual(propsAreEqual2 || shallowEqual);
  return Comp;
}
__name(createComponent, "createComponent");

// node_modules/reakit-utils/es/toArray.js
function toArray(arg) {
  if (Array.isArray(arg)) {
    return arg;
  }
  return typeof arg !== "undefined" ? [arg] : [];
}
__name(toArray, "toArray");

// node_modules/reakit-system/es/createHook.js
var import_react7 = __toESM(require_react());

// node_modules/reakit-system/es/useToken.js
var import_react4 = __toESM(require_react());
function useToken(token, defaultValue) {
  (0, import_react4.useDebugValue)(token);
  var context = (0, import_react4.useContext)(SystemContext);
  return context[token] != null ? context[token] : defaultValue;
}
__name(useToken, "useToken");

// node_modules/reakit-system/es/useProps.js
var import_react5 = __toESM(require_react());
function useProps(name, options, htmlProps) {
  if (options === void 0) {
    options = {};
  }
  if (htmlProps === void 0) {
    htmlProps = {};
  }
  var hookName = "use" + name + "Props";
  (0, import_react5.useDebugValue)(hookName);
  var useHook = useToken(hookName);
  if (useHook) {
    return useHook(options, htmlProps);
  }
  return htmlProps;
}
__name(useProps, "useProps");

// node_modules/reakit-system/es/useOptions.js
var import_react6 = __toESM(require_react());
function useOptions(name, options, htmlProps) {
  if (options === void 0) {
    options = {};
  }
  if (htmlProps === void 0) {
    htmlProps = {};
  }
  var hookName = "use" + name + "Options";
  (0, import_react6.useDebugValue)(hookName);
  var useHook = useToken(hookName);
  if (useHook) {
    return _objectSpread22(_objectSpread22({}, options), useHook(options, htmlProps));
  }
  return options;
}
__name(useOptions, "useOptions");

// node_modules/reakit-system/es/createHook.js
function createHook(options) {
  var _options$useState, _composedHooks$;
  var composedHooks = toArray(options.compose);
  var __useOptions = /* @__PURE__ */ __name(function __useOptions2(hookOptions, htmlProps) {
    if (options.useOptions) {
      hookOptions = options.useOptions(hookOptions, htmlProps);
    }
    if (options.name) {
      hookOptions = useOptions(options.name, hookOptions, htmlProps);
    }
    if (options.compose) {
      for (var _iterator = _createForOfIteratorHelperLoose2(composedHooks), _step; !(_step = _iterator()).done; ) {
        var hook = _step.value;
        hookOptions = hook.__useOptions(hookOptions, htmlProps);
      }
    }
    return hookOptions;
  }, "__useOptions");
  var useHook = /* @__PURE__ */ __name(function useHook2(hookOptions, htmlProps, unstable_ignoreUseOptions) {
    if (hookOptions === void 0) {
      hookOptions = {};
    }
    if (htmlProps === void 0) {
      htmlProps = {};
    }
    if (unstable_ignoreUseOptions === void 0) {
      unstable_ignoreUseOptions = false;
    }
    if (!unstable_ignoreUseOptions) {
      hookOptions = __useOptions(hookOptions, htmlProps);
    }
    if (options.useProps) {
      htmlProps = options.useProps(hookOptions, htmlProps);
    }
    if (options.name) {
      htmlProps = useProps(options.name, hookOptions, htmlProps);
    }
    if (options.compose) {
      if (options.useComposeOptions) {
        hookOptions = options.useComposeOptions(hookOptions, htmlProps);
      }
      if (options.useComposeProps) {
        htmlProps = options.useComposeProps(hookOptions, htmlProps);
      } else {
        for (var _iterator2 = _createForOfIteratorHelperLoose2(composedHooks), _step2; !(_step2 = _iterator2()).done; ) {
          var hook = _step2.value;
          htmlProps = hook(hookOptions, htmlProps, true);
        }
      }
    }
    var finalHTMLProps = {};
    var definedHTMLProps = htmlProps || {};
    for (var prop in definedHTMLProps) {
      if (definedHTMLProps[prop] !== void 0) {
        finalHTMLProps[prop] = definedHTMLProps[prop];
      }
    }
    return finalHTMLProps;
  }, "useHook");
  useHook.__useOptions = __useOptions;
  var composedKeys = composedHooks.reduce(function(keys, hook) {
    keys.push.apply(keys, hook.__keys || []);
    return keys;
  }, []);
  useHook.__keys = [].concat(composedKeys, ((_options$useState = options.useState) === null || _options$useState === void 0 ? void 0 : _options$useState.__keys) || [], options.keys || []);
  useHook.unstable_propsAreEqual = options.propsAreEqual || ((_composedHooks$ = composedHooks[0]) === null || _composedHooks$ === void 0 ? void 0 : _composedHooks$.unstable_propsAreEqual) || shallowEqual;
  if (options.name) {
    Object.defineProperty(useHook, "name", {
      value: "use" + options.name
    });
  }
  return useHook;
}
__name(createHook, "createHook");

// node_modules/reakit/es/Role/Role.js
var ROLE_KEYS = ["unstable_system"];
var useRole = createHook({
  name: "Role",
  keys: ROLE_KEYS,
  propsAreEqual: /* @__PURE__ */ __name(function propsAreEqual(prev, next) {
    var prevSystem = prev.unstable_system, prevProps = _objectWithoutPropertiesLoose(prev, ["unstable_system"]);
    var nextSystem = next.unstable_system, nextProps = _objectWithoutPropertiesLoose(next, ["unstable_system"]);
    if (prevSystem !== nextSystem && !shallowEqual(prevSystem, nextSystem)) {
      return false;
    }
    return shallowEqual(prevProps, nextProps);
  }, "propsAreEqual")
});
var Role = createComponent({
  as: "div",
  useHook: useRole
});

export {
  _objectSpread2,
  _objectWithoutPropertiesLoose,
  _createForOfIteratorHelperLoose,
  SystemContext,
  useCreateElement,
  _objectSpread23 as _objectSpread22,
  _createForOfIteratorHelperLoose3 as _createForOfIteratorHelperLoose2,
  isObject,
  isPlainObject,
  splitProps,
  shallowEqual,
  normalizePropsAreEqual,
  createComponent,
  useProps,
  useOptions,
  toArray,
  createHook,
  useRole,
  Role
};
//# sourceMappingURL=chunk-EDJXIEOR.js.map
