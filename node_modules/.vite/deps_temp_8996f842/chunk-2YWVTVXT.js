import {
  DIALOG_BACKDROP_KEYS,
  DialogBackdropContext,
  Portal
} from "./chunk-NVIKVDCQ.js";
import {
  useDisclosureContent
} from "./chunk-BQDU2HTA.js";
import {
  _objectSpread2,
  _objectWithoutPropertiesLoose,
  createComponent,
  createHook
} from "./chunk-EDJXIEOR.js";
import {
  require_react_dom
} from "./chunk-BCULJ5QE.js";
import {
  require_react
} from "./chunk-NSZELEHI.js";
import {
  __name,
  __toESM
} from "./chunk-4OCRLPSA.js";

// node_modules/reakit/es/Dialog/DialogBackdrop.js
var import_react = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());
var useDialogBackdrop = createHook({
  name: "DialogBackdrop",
  compose: useDisclosureContent,
  keys: DIALOG_BACKDROP_KEYS,
  useOptions: /* @__PURE__ */ __name(function useOptions(_ref) {
    var _ref$modal = _ref.modal, modal = _ref$modal === void 0 ? true : _ref$modal, options = _objectWithoutPropertiesLoose(_ref, ["modal"]);
    return _objectSpread2({
      modal
    }, options);
  }, "useOptions"),
  useProps: /* @__PURE__ */ __name(function useProps(options, _ref2) {
    var htmlWrapElement = _ref2.wrapElement, htmlProps = _objectWithoutPropertiesLoose(_ref2, ["wrapElement"]);
    var wrapElement = (0, import_react.useCallback)(function(element) {
      if (options.modal) {
        element = (0, import_react.createElement)(Portal, null, (0, import_react.createElement)(DialogBackdropContext.Provider, {
          value: options.baseId
        }, element));
      }
      if (htmlWrapElement) {
        return htmlWrapElement(element);
      }
      return element;
    }, [options.modal, htmlWrapElement]);
    return _objectSpread2({
      id: void 0,
      "data-dialog-ref": options.baseId,
      wrapElement
    }, htmlProps);
  }, "useProps")
});
var DialogBackdrop = createComponent({
  as: "div",
  memo: true,
  useHook: useDialogBackdrop
});

export {
  useDialogBackdrop,
  DialogBackdrop
};
//# sourceMappingURL=chunk-2YWVTVXT.js.map
