{
  "version": 3,
  "sources": ["../../string-replace-to-array/string-replace-to-array.js"],
  "sourcesContent": ["// Inspiration: https://github.com/facebook/react/issues/3386\n\nfunction replace (string, regexpOrSubstr, newValueOrFn, globalOffset) {\n\tif (typeof string !== 'string') throw new Error('First param must be a string')\n\tif (typeof regexpOrSubstr !== 'string' && !(regexpOrSubstr instanceof RegExp)) throw new Error('Second param must be a string pattern or a regular expression')\n\n\tvar fn = (typeof regexpOrSubstr === 'string') ? replaceUsingString : replaceUsingRegexp\n\n\treturn fn(string, regexpOrSubstr, newValueOrFn, globalOffset)\n}\n\nfunction replaceUsingString (string, patternString, newValueOrFn, globalOffset) {\n\tvar index = string.indexOf(patternString)\n\n\tif (index >= 0) {\n\t\tvar arr = []\n\t\tvar endIndex = index + patternString.length\n\n\t\tif (index > 0) {\n\t\t\tarr.push(string.substring(0, index))\n\t\t}\n\n\t\tarr.push(\n\t\t\t(typeof newValueOrFn === 'function') ?\n\t\t\t\tnewValueOrFn(\n\t\t\t\t\tstring.substring(index, endIndex),\n\t\t\t\t\tindex + globalOffset,\n\t\t\t\t\tstring\n\t\t\t\t) :\n\t\t\t\tnewValueOrFn\n\t\t)\n\n\t\tif (endIndex < string.length) {\n\t\t\tarr.push(string.substring(endIndex))\n\t\t}\n\n\t\treturn arr\n\t} else {\n\t\treturn [string]\n\t}\n}\n\nfunction replaceUsingRegexp (string, regexp, newValueOrFn, globalOffset) {\n\tvar output = []\n\n\tvar replacerIsFn = (typeof newValueOrFn === 'function')\n\n\tvar storedLastIndex = regexp.lastIndex\n\tregexp.lastIndex = 0\n\n\tvar result\n\tvar lastIndex = 0\n\twhile (result = regexp.exec(string)) {\n\t\tvar index = result.index\n\n\t\tif (result[0] === '') {\n\t\t\t// When the regexp is an empty string\n\t\t\t// we still want to advance our cursor to the next item.\n\t\t\t// This is the behavior of String.replace.\n\t\t\tregexp.lastIndex++\n\t\t}\n\n\t\tif (index !== lastIndex) {\n\t\t\toutput.push(string.substring(lastIndex, index))\n\t\t}\n\n\t\tvar match = result[0]\n\t\tlastIndex = index + match.length\n\t\t\n\t\tvar out = replacerIsFn ?\n\t\t\tnewValueOrFn.apply(this, result.concat(index + globalOffset, result.input)) :\n\t\t\tnewValueOrFn\n\t\toutput.push(out)\n\n\t\tif (!regexp.global) {\n\t\t\tbreak\n\t\t}\n\t}\n\n\tif (lastIndex < string.length) {\n\t\toutput.push(string.substring(lastIndex))\n\t}\n\n\tregexp.lastIndex = storedLastIndex\n\treturn output\n}\n\nmodule.exports = function stringReplaceToArray (stringOrArray, regexpOrSubstr, newSubStrOrFn) {\n\tif (typeof stringOrArray === 'string') {\n\t\treturn replace(stringOrArray, regexpOrSubstr, newSubStrOrFn, 0)\n\t} else if (!Array.isArray(stringOrArray) || !stringOrArray[0]) {\n\t\tthrow new TypeError('First argument must be an array or non-empty string')\n\t} else {\n\t\tvar len = stringOrArray.length\n\t\tvar output = []\n\t\tvar globalOffset = 0\n\t\tfor (var i = 0; i < len; ++i) {\n\t\t\tvar arrayItem = stringOrArray[i]\n\t\t\tif (typeof arrayItem === 'string') {\n\t\t\t\toutput.push.apply(output, replace(arrayItem, regexpOrSubstr, newSubStrOrFn, globalOffset))\n\t\t\t\tglobalOffset += arrayItem.length\n\t\t\t} else {\n\t\t\t\toutput.push(arrayItem)\n\t\t\t}\n\t\t}\n\t\treturn output\n\t}\n}"],
  "mappings": ";;;;;;AAAA;AAAA;AAEA,aAAS,QAAS,QAAQ,gBAAgB,cAAc,cAAc;AACrE,UAAI,OAAO,WAAW,SAAU,OAAM,IAAI,MAAM,8BAA8B;AAC9E,UAAI,OAAO,mBAAmB,YAAY,EAAE,0BAA0B,QAAS,OAAM,IAAI,MAAM,+DAA+D;AAE9J,UAAI,KAAM,OAAO,mBAAmB,WAAY,qBAAqB;AAErE,aAAO,GAAG,QAAQ,gBAAgB,cAAc,YAAY;AAAA,IAC7D;AAPS;AAST,aAAS,mBAAoB,QAAQ,eAAe,cAAc,cAAc;AAC/E,UAAI,QAAQ,OAAO,QAAQ,aAAa;AAExC,UAAI,SAAS,GAAG;AACf,YAAI,MAAM,CAAC;AACX,YAAI,WAAW,QAAQ,cAAc;AAErC,YAAI,QAAQ,GAAG;AACd,cAAI,KAAK,OAAO,UAAU,GAAG,KAAK,CAAC;AAAA,QACpC;AAEA,YAAI;AAAA,UACF,OAAO,iBAAiB,aACxB;AAAA,YACC,OAAO,UAAU,OAAO,QAAQ;AAAA,YAChC,QAAQ;AAAA,YACR;AAAA,UACD,IACA;AAAA,QACF;AAEA,YAAI,WAAW,OAAO,QAAQ;AAC7B,cAAI,KAAK,OAAO,UAAU,QAAQ,CAAC;AAAA,QACpC;AAEA,eAAO;AAAA,MACR,OAAO;AACN,eAAO,CAAC,MAAM;AAAA,MACf;AAAA,IACD;AA7BS;AA+BT,aAAS,mBAAoB,QAAQ,QAAQ,cAAc,cAAc;AACxE,UAAI,SAAS,CAAC;AAEd,UAAI,eAAgB,OAAO,iBAAiB;AAE5C,UAAI,kBAAkB,OAAO;AAC7B,aAAO,YAAY;AAEnB,UAAI;AACJ,UAAI,YAAY;AAChB,aAAO,SAAS,OAAO,KAAK,MAAM,GAAG;AACpC,YAAI,QAAQ,OAAO;AAEnB,YAAI,OAAO,CAAC,MAAM,IAAI;AAIrB,iBAAO;AAAA,QACR;AAEA,YAAI,UAAU,WAAW;AACxB,iBAAO,KAAK,OAAO,UAAU,WAAW,KAAK,CAAC;AAAA,QAC/C;AAEA,YAAI,QAAQ,OAAO,CAAC;AACpB,oBAAY,QAAQ,MAAM;AAE1B,YAAI,MAAM,eACT,aAAa,MAAM,MAAM,OAAO,OAAO,QAAQ,cAAc,OAAO,KAAK,CAAC,IAC1E;AACD,eAAO,KAAK,GAAG;AAEf,YAAI,CAAC,OAAO,QAAQ;AACnB;AAAA,QACD;AAAA,MACD;AAEA,UAAI,YAAY,OAAO,QAAQ;AAC9B,eAAO,KAAK,OAAO,UAAU,SAAS,CAAC;AAAA,MACxC;AAEA,aAAO,YAAY;AACnB,aAAO;AAAA,IACR;AA3CS;AA6CT,WAAO,UAAU,gCAAS,qBAAsB,eAAe,gBAAgB,eAAe;AAC7F,UAAI,OAAO,kBAAkB,UAAU;AACtC,eAAO,QAAQ,eAAe,gBAAgB,eAAe,CAAC;AAAA,MAC/D,WAAW,CAAC,MAAM,QAAQ,aAAa,KAAK,CAAC,cAAc,CAAC,GAAG;AAC9D,cAAM,IAAI,UAAU,qDAAqD;AAAA,MAC1E,OAAO;AACN,YAAI,MAAM,cAAc;AACxB,YAAI,SAAS,CAAC;AACd,YAAI,eAAe;AACnB,iBAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC7B,cAAI,YAAY,cAAc,CAAC;AAC/B,cAAI,OAAO,cAAc,UAAU;AAClC,mBAAO,KAAK,MAAM,QAAQ,QAAQ,WAAW,gBAAgB,eAAe,YAAY,CAAC;AACzF,4BAAgB,UAAU;AAAA,UAC3B,OAAO;AACN,mBAAO,KAAK,SAAS;AAAA,UACtB;AAAA,QACD;AACA,eAAO;AAAA,MACR;AAAA,IACD,GApBiB;AAAA;AAAA;",
  "names": []
}
