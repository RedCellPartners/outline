{
  "version": 3,
  "sources": ["../../@sentry/src/sdk.ts", "../../@sentry/src/constants.ts", "../../@sentry/src/profiler.tsx", "../../@sentry/src/debug-build.ts", "../../@sentry/src/errorboundary.tsx", "../../@sentry/src/redux.ts", "../../@sentry/src/reactrouterv3.ts", "../../@sentry/src/reactrouter.tsx", "../../@sentry/src/reactrouterv6.tsx"],
  "sourcesContent": ["import type { BrowserOptions } from '@sentry/browser';\nimport { init as browserInit } from '@sentry/browser';\nimport { applySdkMetadata } from '@sentry/core';\n\n/**\n * Inits the React SDK\n */\nexport function init(options: BrowserOptions): void {\n  const opts = {\n    ...options,\n  };\n\n  applySdkMetadata(opts, 'react');\n\n  browserInit(opts);\n}\n", "export const REACT_RENDER_OP = 'ui.react.render';\n\nexport const REACT_UPDATE_OP = 'ui.react.update';\n\nexport const REACT_MOUNT_OP = 'ui.react.mount';\n", "import { startInactiveSpan } from '@sentry/browser';\nimport { spanToJSON, withActiveSpan } from '@sentry/core';\nimport type { Span } from '@sentry/types';\nimport { timestampInSeconds } from '@sentry/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\n\nimport { REACT_MOUNT_OP, REACT_RENDER_OP, REACT_UPDATE_OP } from './constants';\n\nexport const UNKNOWN_COMPONENT = 'unknown';\n\nexport type ProfilerProps = {\n  // The name of the component being profiled.\n  name: string;\n  // If the Profiler is disabled. False by default. This is useful if you want to disable profilers\n  // in certain environments.\n  disabled?: boolean;\n  // If time component is on page should be displayed as spans. True by default.\n  includeRender?: boolean;\n  // If component updates should be displayed as spans. True by default.\n  includeUpdates?: boolean;\n  // Component that is being profiled.\n  children?: React.ReactNode;\n  // props given to component being profiled.\n  updateProps: { [key: string]: unknown };\n};\n\n/**\n * The Profiler component leverages Sentry's Tracing integration to generate\n * spans based on component lifecycles.\n */\nclass Profiler extends React.Component<ProfilerProps> {\n  /**\n   * The span of the mount activity\n   * Made protected for the React Native SDK to access\n   */\n  protected _mountSpan: Span | undefined;\n  /**\n   * The span that represents the duration of time between shouldComponentUpdate and componentDidUpdate\n   */\n  protected _updateSpan: Span | undefined;\n\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  public static defaultProps: Partial<ProfilerProps> = {\n    disabled: false,\n    includeRender: true,\n    includeUpdates: true,\n  };\n\n  public constructor(props: ProfilerProps) {\n    super(props);\n    const { name, disabled = false } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    this._mountSpan = startInactiveSpan({\n      name: `<${name}>`,\n      onlyIfParent: true,\n      op: REACT_MOUNT_OP,\n      origin: 'auto.ui.react.profiler',\n      attributes: { 'ui.component_name': name },\n    });\n  }\n\n  // If a component mounted, we can finish the mount activity.\n  public componentDidMount(): void {\n    if (this._mountSpan) {\n      this._mountSpan.end();\n    }\n  }\n\n  public shouldComponentUpdate({ updateProps, includeUpdates = true }: ProfilerProps): boolean {\n    // Only generate an update span if includeUpdates is true, if there is a valid mountSpan,\n    // and if the updateProps have changed. It is ok to not do a deep equality check here as it is expensive.\n    // We are just trying to give baseline clues for further investigation.\n    if (includeUpdates && this._mountSpan && updateProps !== this.props.updateProps) {\n      // See what props haved changed between the previous props, and the current props. This is\n      // set as data on the span. We just store the prop keys as the values could be potenially very large.\n      const changedProps = Object.keys(updateProps).filter(k => updateProps[k] !== this.props.updateProps[k]);\n      if (changedProps.length > 0) {\n        const now = timestampInSeconds();\n        this._updateSpan = withActiveSpan(this._mountSpan, () => {\n          return startInactiveSpan({\n            name: `<${this.props.name}>`,\n            onlyIfParent: true,\n            op: REACT_UPDATE_OP,\n            origin: 'auto.ui.react.profiler',\n            startTimestamp: now,\n            attributes: {\n              'ui.component_name': this.props.name,\n              'ui.react.changed_props': changedProps,\n            },\n          });\n        });\n      }\n    }\n\n    return true;\n  }\n\n  public componentDidUpdate(): void {\n    if (this._updateSpan) {\n      this._updateSpan.end();\n      this._updateSpan = undefined;\n    }\n  }\n\n  // If a component is unmounted, we can say it is no longer on the screen.\n  // This means we can finish the span representing the component render.\n  public componentWillUnmount(): void {\n    const endTimestamp = timestampInSeconds();\n    const { name, includeRender = true } = this.props;\n\n    if (this._mountSpan && includeRender) {\n      const startTimestamp = spanToJSON(this._mountSpan).timestamp;\n      withActiveSpan(this._mountSpan, () => {\n        const renderSpan = startInactiveSpan({\n          onlyIfParent: true,\n          name: `<${name}>`,\n          op: REACT_RENDER_OP,\n          origin: 'auto.ui.react.profiler',\n          startTimestamp,\n          attributes: { 'ui.component_name': name },\n        });\n        if (renderSpan) {\n          // Have to cast to Span because the type of _mountSpan is Span | undefined\n          // and not getting narrowed properly\n          renderSpan.end(endTimestamp);\n        }\n      });\n    }\n  }\n\n  public render(): React.ReactNode {\n    return this.props.children;\n  }\n}\n\n/**\n * withProfiler is a higher order component that wraps a\n * component in a {@link Profiler} component. It is recommended that\n * the higher order component be used over the regular {@link Profiler} component.\n *\n * @param WrappedComponent component that is wrapped by Profiler\n * @param options the {@link ProfilerProps} you can pass into the Profiler\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withProfiler<P extends Record<string, any>>(\n  WrappedComponent: React.ComponentType<P>,\n  // We do not want to have `updateProps` given in options, it is instead filled through the HOC.\n  options?: Pick<Partial<ProfilerProps>, Exclude<keyof ProfilerProps, 'updateProps' | 'children'>>,\n): React.FC<P> {\n  const componentDisplayName =\n    (options && options.name) || WrappedComponent.displayName || WrappedComponent.name || UNKNOWN_COMPONENT;\n\n  const Wrapped: React.FC<P> = (props: P) => (\n    <Profiler {...options} name={componentDisplayName} updateProps={props}>\n      <WrappedComponent {...props} />\n    </Profiler>\n  );\n\n  Wrapped.displayName = `profiler(${componentDisplayName})`;\n\n  // Copy over static methods from Wrapped component to Profiler HOC\n  // See: https://reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n  hoistNonReactStatics(Wrapped, WrappedComponent);\n  return Wrapped;\n}\n\n/**\n *\n * `useProfiler` is a React hook that profiles a React component.\n *\n * Requires React 16.8 or above.\n * @param name displayName of component being profiled\n */\nfunction useProfiler(\n  name: string,\n  options: { disabled?: boolean; hasRenderSpan?: boolean } = {\n    disabled: false,\n    hasRenderSpan: true,\n  },\n): void {\n  const [mountSpan] = React.useState(() => {\n    if (options && options.disabled) {\n      return undefined;\n    }\n\n    return startInactiveSpan({\n      name: `<${name}>`,\n      onlyIfParent: true,\n      op: REACT_MOUNT_OP,\n      origin: 'auto.ui.react.profiler',\n      attributes: { 'ui.component_name': name },\n    });\n  });\n\n  React.useEffect(() => {\n    if (mountSpan) {\n      mountSpan.end();\n    }\n\n    return (): void => {\n      if (mountSpan && options.hasRenderSpan) {\n        const startTimestamp = spanToJSON(mountSpan).timestamp;\n        const endTimestamp = timestampInSeconds();\n\n        const renderSpan = startInactiveSpan({\n          name: `<${name}>`,\n          onlyIfParent: true,\n          op: REACT_RENDER_OP,\n          origin: 'auto.ui.react.profiler',\n          startTimestamp,\n          attributes: { 'ui.component_name': name },\n        });\n        if (renderSpan) {\n          // Have to cast to Span because the type of _mountSpan is Span | undefined\n          // and not getting narrowed properly\n          renderSpan.end(endTimestamp);\n        }\n      }\n    };\n    // We only want this to run once.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n}\n\nexport { withProfiler, Profiler, useProfiler };\n", "declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n", "import type { ReportDialogOptions, Scope } from '@sentry/browser';\nimport { captureException, getClient, showReportDialog, withScope } from '@sentry/browser';\nimport { isError, logger } from '@sentry/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\n\nimport { DEBUG_BUILD } from './debug-build';\n\nexport function isAtLeastReact17(version: string): boolean {\n  const major = version.match(/^([^.]+)/);\n  return major !== null && parseInt(major[0]) >= 17;\n}\n\nexport const UNKNOWN_COMPONENT = 'unknown';\n\nexport type FallbackRender = (errorData: {\n  error: Error;\n  componentStack: string;\n  eventId: string;\n  resetError(): void;\n}) => React.ReactElement;\n\nexport type ErrorBoundaryProps = {\n  children?: React.ReactNode | (() => React.ReactNode);\n  /** If a Sentry report dialog should be rendered on error */\n  showDialog?: boolean | undefined;\n  /**\n   * Options to be passed into the Sentry report dialog.\n   * No-op if {@link showDialog} is false.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  dialogOptions?: Omit<ReportDialogOptions, 'eventId'> | undefined;\n  /**\n   * A fallback component that gets rendered when the error boundary encounters an error.\n   *\n   * Can either provide a React Component, or a function that returns React Component as\n   * a valid fallback prop. If a function is provided, the function will be called with\n   * the error, the component stack, and an function that resets the error boundary on error.\n   *\n   */\n  fallback?: React.ReactElement | FallbackRender | undefined;\n  /** Called when the error boundary encounters an error */\n  onError?: ((error: Error, componentStack: string, eventId: string) => void) | undefined;\n  /** Called on componentDidMount() */\n  onMount?: (() => void) | undefined;\n  /** Called if resetError() is called from the fallback render props function  */\n  onReset?: ((error: Error | null, componentStack: string | null, eventId: string | null) => void) | undefined;\n  /** Called on componentWillUnmount() */\n  onUnmount?: ((error: Error | null, componentStack: string | null, eventId: string | null) => void) | undefined;\n  /** Called before the error is captured by Sentry, allows for you to add tags or context using the scope */\n  beforeCapture?: ((scope: Scope, error: Error | null, componentStack: string | null) => void) | undefined;\n};\n\ntype ErrorBoundaryState =\n  | {\n      componentStack: null;\n      error: null;\n      eventId: null;\n    }\n  | {\n      componentStack: React.ErrorInfo['componentStack'];\n      error: Error;\n      eventId: string;\n    };\n\nconst INITIAL_STATE = {\n  componentStack: null,\n  error: null,\n  eventId: null,\n};\n\nfunction setCause(error: Error & { cause?: Error }, cause: Error): void {\n  const seenErrors = new WeakMap<Error, boolean>();\n\n  function recurse(error: Error & { cause?: Error }, cause: Error): void {\n    // If we've already seen the error, there is a recursive loop somewhere in the error's\n    // cause chain. Let's just bail out then to prevent a stack overflow.\n    if (seenErrors.has(error)) {\n      return;\n    }\n    if (error.cause) {\n      seenErrors.set(error, true);\n      return recurse(error.cause, cause);\n    }\n    error.cause = cause;\n  }\n\n  recurse(error, cause);\n}\n\n/**\n * A ErrorBoundary component that logs errors to Sentry. Requires React >= 16.\n * NOTE: If you are a Sentry user, and you are seeing this stack frame, it means the\n * Sentry React SDK ErrorBoundary caught an error invoking your application code. This\n * is expected behavior and NOT indicative of a bug with the Sentry React SDK.\n */\nclass ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  public state: ErrorBoundaryState;\n\n  private readonly _openFallbackReportDialog: boolean;\n\n  private _lastEventId?: string;\n\n  public constructor(props: ErrorBoundaryProps) {\n    super(props);\n\n    this.state = INITIAL_STATE;\n    this._openFallbackReportDialog = true;\n\n    const client = getClient();\n    if (client && client.on && props.showDialog) {\n      this._openFallbackReportDialog = false;\n      client.on('afterSendEvent', event => {\n        if (!event.type && event.event_id === this._lastEventId) {\n          // eslint-disable-next-line deprecation/deprecation\n          showReportDialog({ ...props.dialogOptions, eventId: this._lastEventId });\n        }\n      });\n    }\n  }\n\n  public componentDidCatch(error: Error & { cause?: Error }, { componentStack }: React.ErrorInfo): void {\n    const { beforeCapture, onError, showDialog, dialogOptions } = this.props;\n    withScope(scope => {\n      // If on React version >= 17, create stack trace from componentStack param and links\n      // to to the original error using `error.cause` otherwise relies on error param for stacktrace.\n      // Linking errors requires the `LinkedErrors` integration be enabled.\n      // See: https://reactjs.org/blog/2020/08/10/react-v17-rc.html#native-component-stacks\n      //\n      // Although `componentDidCatch` is typed to accept an `Error` object, it can also be invoked\n      // with non-error objects. This is why we need to check if the error is an error-like object.\n      // See: https://github.com/getsentry/sentry-javascript/issues/6167\n      if (isAtLeastReact17(React.version) && isError(error)) {\n        const errorBoundaryError = new Error(error.message);\n        errorBoundaryError.name = `React ErrorBoundary ${error.name}`;\n        errorBoundaryError.stack = componentStack;\n\n        // Using the `LinkedErrors` integration to link the errors together.\n        setCause(error, errorBoundaryError);\n      }\n\n      if (beforeCapture) {\n        beforeCapture(scope, error, componentStack);\n      }\n\n      const eventId = captureException(error, {\n        captureContext: {\n          contexts: { react: { componentStack } },\n        },\n        // If users provide a fallback component we can assume they are handling the error.\n        // Therefore, we set the mechanism depending on the presence of the fallback prop.\n        mechanism: { handled: !!this.props.fallback },\n      });\n\n      if (onError) {\n        onError(error, componentStack, eventId);\n      }\n      if (showDialog) {\n        this._lastEventId = eventId;\n        if (this._openFallbackReportDialog) {\n          showReportDialog({ ...dialogOptions, eventId });\n        }\n      }\n\n      // componentDidCatch is used over getDerivedStateFromError\n      // so that componentStack is accessible through state.\n      this.setState({ error, componentStack, eventId });\n    });\n  }\n\n  public componentDidMount(): void {\n    const { onMount } = this.props;\n    if (onMount) {\n      onMount();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    const { error, componentStack, eventId } = this.state;\n    const { onUnmount } = this.props;\n    if (onUnmount) {\n      onUnmount(error, componentStack, eventId);\n    }\n  }\n\n  public resetErrorBoundary: () => void = () => {\n    const { onReset } = this.props;\n    const { error, componentStack, eventId } = this.state;\n    if (onReset) {\n      onReset(error, componentStack, eventId);\n    }\n    this.setState(INITIAL_STATE);\n  };\n\n  public render(): React.ReactNode {\n    const { fallback, children } = this.props;\n    const state = this.state;\n\n    if (state.error) {\n      let element: React.ReactElement | undefined = undefined;\n      if (typeof fallback === 'function') {\n        element = fallback({\n          error: state.error,\n          componentStack: state.componentStack,\n          resetError: this.resetErrorBoundary,\n          eventId: state.eventId,\n        });\n      } else {\n        element = fallback;\n      }\n\n      if (React.isValidElement(element)) {\n        return element;\n      }\n\n      if (fallback) {\n        DEBUG_BUILD && logger.warn('fallback did not produce a valid ReactElement');\n      }\n\n      // Fail gracefully if no fallback provided or is not valid\n      return null;\n    }\n\n    if (typeof children === 'function') {\n      return (children as () => React.ReactNode)();\n    }\n    return children;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withErrorBoundary<P extends Record<string, any>>(\n  WrappedComponent: React.ComponentType<P>,\n  errorBoundaryOptions: ErrorBoundaryProps,\n): React.FC<P> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const componentDisplayName = WrappedComponent.displayName || WrappedComponent.name || UNKNOWN_COMPONENT;\n\n  const Wrapped: React.FC<P> = (props: P) => (\n    <ErrorBoundary {...errorBoundaryOptions}>\n      <WrappedComponent {...props} />\n    </ErrorBoundary>\n  );\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  Wrapped.displayName = `errorBoundary(${componentDisplayName})`;\n\n  // Copy over static methods from Wrapped component to Profiler HOC\n  // See: https://reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n  hoistNonReactStatics(Wrapped, WrappedComponent);\n  return Wrapped;\n}\n\nexport { ErrorBoundary, withErrorBoundary };\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { getClient, getCurrentScope, getGlobalScope } from '@sentry/core';\nimport type { Scope } from '@sentry/types';\nimport { addNonEnumerableProperty } from '@sentry/utils';\n\ninterface Action<T = any> {\n  type: T;\n}\n\ninterface AnyAction extends Action {\n  [extraProps: string]: any;\n}\n\ntype Reducer<S = any, A extends Action = AnyAction> = (state: S | undefined, action: A) => S;\n\ntype Dispatch<A extends Action = AnyAction> = <T extends A>(action: T, ...extraArgs: any[]) => T;\n\ntype ExtendState<State, Extension> = [Extension] extends [never] ? State : State & Extension;\n\ntype Unsubscribe = () => void;\n\ninterface Store<S = any, A extends Action = AnyAction, StateExt = never, Ext = Record<string, unknown>> {\n  dispatch: Dispatch<A>;\n  getState(): S;\n  subscribe(listener: () => void): Unsubscribe;\n  replaceReducer<NewState, NewActions extends Action>(\n    nextReducer: Reducer<NewState, NewActions>,\n  ): Store<ExtendState<NewState, StateExt>, NewActions, StateExt, Ext> & Ext;\n}\n\ndeclare const $CombinedState: unique symbol;\n\ntype CombinedState<S> = { readonly [$CombinedState]?: undefined } & S;\n\ntype PreloadedState<S> = Required<S> extends {\n  [$CombinedState]: undefined;\n}\n  ? S extends CombinedState<infer S1>\n    ? { [K in keyof S1]?: S1[K] extends Record<string, unknown> ? PreloadedState<S1[K]> : S1[K] }\n    : never\n  : { [K in keyof S]: S[K] extends string | number | boolean | symbol ? S[K] : PreloadedState<S[K]> };\n\ntype StoreEnhancerStoreCreator<Ext = Record<string, unknown>, StateExt = never> = <\n  S = any,\n  A extends Action = AnyAction,\n>(\n  reducer: Reducer<S, A>,\n  preloadedState?: PreloadedState<S>,\n) => Store<ExtendState<S, StateExt>, A, StateExt, Ext> & Ext;\n\nexport interface SentryEnhancerOptions<S = any> {\n  /**\n   * Redux state in attachments or not.\n   * @default true\n   */\n  attachReduxState?: boolean;\n\n  /**\n   * Transforms the state before attaching it to an event.\n   * Use this to remove any private data before sending it to Sentry.\n   * Return null to not attach the state.\n   */\n  stateTransformer(state: S | undefined): (S & any) | null;\n  /**\n   * Transforms the action before sending it as a breadcrumb.\n   * Use this to remove any private data before sending it to Sentry.\n   * Return null to not send the breadcrumb.\n   */\n  actionTransformer(action: AnyAction): AnyAction | null;\n  /**\n   * Called on every state update, configure the Sentry Scope with the redux state.\n   */\n  configureScopeWithState?(scope: Scope, state: S): void;\n}\n\nconst ACTION_BREADCRUMB_CATEGORY = 'redux.action';\nconst ACTION_BREADCRUMB_TYPE = 'info';\n\nconst defaultOptions: SentryEnhancerOptions = {\n  attachReduxState: true,\n  actionTransformer: action => action,\n  stateTransformer: state => state || null,\n};\n\n/**\n * Creates an enhancer that would be passed to Redux's createStore to log actions and the latest state to Sentry.\n *\n * @param enhancerOptions Options to pass to the enhancer\n */\nfunction createReduxEnhancer(enhancerOptions?: Partial<SentryEnhancerOptions>): any {\n  // Note: We return an any type as to not have type conflicts.\n  const options = {\n    ...defaultOptions,\n    ...enhancerOptions,\n  };\n\n  return (next: StoreEnhancerStoreCreator): StoreEnhancerStoreCreator =>\n    <S = any, A extends Action = AnyAction>(reducer: Reducer<S, A>, initialState?: PreloadedState<S>) => {\n      options.attachReduxState &&\n        getGlobalScope().addEventProcessor((event, hint) => {\n          try {\n            // @ts-expect-error try catch to reduce bundle size\n            if (event.type === undefined && event.contexts.state.state.type === 'redux') {\n              hint.attachments = [\n                ...(hint.attachments || []),\n                // @ts-expect-error try catch to reduce bundle size\n                { filename: 'redux_state.json', data: JSON.stringify(event.contexts.state.state.value) },\n              ];\n            }\n          } catch (_) {\n            // empty\n          }\n          return event;\n        });\n\n      const sentryReducer: Reducer<S, A> = (state, action): S => {\n        const newState = reducer(state, action);\n\n        const scope = getCurrentScope();\n\n        /* Action breadcrumbs */\n        const transformedAction = options.actionTransformer(action);\n        if (typeof transformedAction !== 'undefined' && transformedAction !== null) {\n          scope.addBreadcrumb({\n            category: ACTION_BREADCRUMB_CATEGORY,\n            data: transformedAction,\n            type: ACTION_BREADCRUMB_TYPE,\n          });\n        }\n\n        /* Set latest state to scope */\n        const transformedState = options.stateTransformer(newState);\n        if (typeof transformedState !== 'undefined' && transformedState !== null) {\n          const client = getClient();\n          const options = client && client.getOptions();\n          const normalizationDepth = (options && options.normalizeDepth) || 3; // default state normalization depth to 3\n\n          // Set the normalization depth of the redux state to the configured `normalizeDepth` option or a sane number as a fallback\n          const newStateContext = { state: { type: 'redux', value: transformedState } };\n          addNonEnumerableProperty(\n            newStateContext,\n            '__sentry_override_normalization_depth__',\n            3 + // 3 layers for `state.value.transformedState`\n              normalizationDepth, // rest for the actual state\n          );\n\n          scope.setContext('state', newStateContext);\n        } else {\n          scope.setContext('state', null);\n        }\n\n        /* Allow user to configure scope with latest state */\n        const { configureScopeWithState } = options;\n        if (typeof configureScopeWithState === 'function') {\n          configureScopeWithState(scope, newState);\n        }\n\n        return newState;\n      };\n\n      return next(sentryReducer, initialState);\n    };\n}\n\nexport { createReduxEnhancer };\n", "import {\n  WINDOW,\n  browserTracingIntegration,\n  startBrowserTracingNavigationSpan,\n  startBrowserTracingPageLoadSpan,\n} from '@sentry/browser';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n} from '@sentry/core';\nimport type {\n  Integration,\n  SpanAttributes,\n  StartSpanOptions,\n  Transaction,\n  TransactionContext,\n  TransactionSource,\n} from '@sentry/types';\n\nimport type { Location, ReactRouterInstrumentation } from './types';\n\n// Many of the types below had to be mocked out to prevent typescript issues\n// these types are required for correct functionality.\n\ntype HistoryV3 = {\n  location?: Location;\n  listen?(cb: (location: Location) => void): void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n} & Record<string, any>;\n\nexport type Route = { path?: string; childRoutes?: Route[] };\n\nexport type Match = (\n  props: { location: Location; routes: Route[] },\n  cb: (error?: Error, _redirectLocation?: Location, renderProps?: { routes?: Route[] }) => void,\n) => void;\n\ntype ReactRouterV3TransactionSource = Extract<TransactionSource, 'url' | 'route'>;\n\ninterface ReactRouterOptions {\n  history: HistoryV3;\n  routes: Route[];\n  match: Match;\n}\n\n/**\n * A browser tracing integration that uses React Router v3 to instrument navigations.\n * Expects `history` (and optionally `routes` and `matchPath`) to be passed as options.\n */\nexport function reactRouterV3BrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] & ReactRouterOptions,\n): Integration {\n  const integration = browserTracingIntegration({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  const { history, routes, match, instrumentPageLoad = true, instrumentNavigation = true } = options;\n\n  return {\n    ...integration,\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      const startPageloadCallback = (startSpanOptions: StartSpanOptions): undefined => {\n        startBrowserTracingPageLoadSpan(client, startSpanOptions);\n        return undefined;\n      };\n\n      const startNavigationCallback = (startSpanOptions: StartSpanOptions): undefined => {\n        startBrowserTracingNavigationSpan(client, startSpanOptions);\n        return undefined;\n      };\n\n      // eslint-disable-next-line deprecation/deprecation\n      const instrumentation = reactRouterV3Instrumentation(history, routes, match);\n\n      // Now instrument page load & navigation with correct settings\n      instrumentation(startPageloadCallback, instrumentPageLoad, false);\n      instrumentation(startNavigationCallback, false, instrumentNavigation);\n    },\n  };\n}\n\n/**\n * Creates routing instrumentation for React Router v3\n * Works for React Router >= 3.2.0 and < 4.0.0\n *\n * @param history object from the `history` library\n * @param routes a list of all routes, should be\n * @param match `Router.match` utility\n *\n * @deprecated Use `reactRouterV3BrowserTracingIntegration()` instead\n */\nexport function reactRouterV3Instrumentation(\n  history: HistoryV3,\n  routes: Route[],\n  match: Match,\n): ReactRouterInstrumentation {\n  return (\n    startTransaction: (context: TransactionContext) => Transaction | undefined,\n    startTransactionOnPageLoad: boolean = true,\n    startTransactionOnLocationChange: boolean = true,\n  ) => {\n    let activeTransaction: Transaction | undefined;\n    let prevName: string | undefined;\n\n    // Have to use window.location because history.location might not be defined.\n    if (startTransactionOnPageLoad && WINDOW && WINDOW.location) {\n      normalizeTransactionName(\n        routes,\n        WINDOW.location as unknown as Location,\n        match,\n        (localName: string, source: ReactRouterV3TransactionSource = 'url') => {\n          prevName = localName;\n          activeTransaction = startTransaction({\n            name: prevName,\n            attributes: {\n              [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n              [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.react.reactrouter_v3',\n              [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n            },\n          });\n        },\n      );\n    }\n\n    if (startTransactionOnLocationChange && history.listen) {\n      history.listen(location => {\n        if (location.action === 'PUSH' || location.action === 'POP') {\n          if (activeTransaction) {\n            activeTransaction.end();\n          }\n          normalizeTransactionName(routes, location, match, (localName: string, source: TransactionSource = 'url') => {\n            prevName = localName;\n\n            const attributes: SpanAttributes = {\n              [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n              [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.react.reactrouter_v3',\n              [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n            };\n\n            activeTransaction = startTransaction({\n              name: prevName,\n              attributes,\n            });\n          });\n        }\n      });\n    }\n  };\n}\n\n/**\n * Normalize transaction names using `Router.match`\n */\nfunction normalizeTransactionName(\n  appRoutes: Route[],\n  location: Location,\n  match: Match,\n  callback: (pathname: string, source?: ReactRouterV3TransactionSource) => void,\n): void {\n  let name = location.pathname;\n  match(\n    {\n      location,\n      routes: appRoutes,\n    },\n    (error, _redirectLocation, renderProps) => {\n      if (error || !renderProps) {\n        return callback(name);\n      }\n\n      const routePath = getRouteStringFromRoutes(renderProps.routes || []);\n      if (routePath.length === 0 || routePath === '/*') {\n        return callback(name);\n      }\n\n      name = routePath;\n      return callback(name, 'route');\n    },\n  );\n}\n\n/**\n * Generate route name from array of routes\n */\nfunction getRouteStringFromRoutes(routes: Route[]): string {\n  if (!Array.isArray(routes) || routes.length === 0) {\n    return '';\n  }\n\n  const routesWithPaths: Route[] = routes.filter((route: Route) => !!route.path);\n\n  let index = -1;\n  for (let x = routesWithPaths.length - 1; x >= 0; x--) {\n    const route = routesWithPaths[x];\n    if (route.path && route.path.startsWith('/')) {\n      index = x;\n      break;\n    }\n  }\n\n  return routesWithPaths\n    .slice(index)\n    .filter(({ path }) => !!path)\n    .map(({ path }) => path)\n    .join('');\n}\n", "import {\n  WINDOW,\n  browserTracingIntegration,\n  startBrowserTracingNavigationSpan,\n  startBrowserTracingPageLoadSpan,\n} from '@sentry/browser';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  getActiveSpan,\n  getRootSpan,\n  spanToJSON,\n} from '@sentry/core';\nimport type { Integration, Span, StartSpanOptions, Transaction, TransactionSource } from '@sentry/types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\n\nimport type { Action, Location, ReactRouterInstrumentation } from './types';\n\n// We need to disable eslint no-explict-any because any is required for the\n// react-router typings.\ntype Match = { path: string; url: string; params: Record<string, any>; isExact: boolean }; // eslint-disable-line @typescript-eslint/no-explicit-any\n\nexport type RouterHistory = {\n  location?: Location;\n  listen?(cb: (location: Location, action: Action) => void): void;\n} & Record<string, any>; // eslint-disable-line @typescript-eslint/no-explicit-any\n\nexport type RouteConfig = {\n  [propName: string]: unknown;\n  path?: string | string[];\n  exact?: boolean;\n  component?: JSX.Element;\n  routes?: RouteConfig[];\n};\n\nexport type MatchPath = (pathname: string, props: string | string[] | any, parent?: Match | null) => Match | null; // eslint-disable-line @typescript-eslint/no-explicit-any\n\ninterface ReactRouterOptions {\n  history: RouterHistory;\n  routes?: RouteConfig[];\n  matchPath?: MatchPath;\n}\n\nlet activeTransaction: Transaction | undefined;\n\n/**\n * A browser tracing integration that uses React Router v4 to instrument navigations.\n * Expects `history` (and optionally `routes` and `matchPath`) to be passed as options.\n */\nexport function reactRouterV4BrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] & ReactRouterOptions,\n): Integration {\n  const integration = browserTracingIntegration({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  const { history, routes, matchPath, instrumentPageLoad = true, instrumentNavigation = true } = options;\n\n  return {\n    ...integration,\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      const startPageloadCallback = (startSpanOptions: StartSpanOptions): undefined => {\n        startBrowserTracingPageLoadSpan(client, startSpanOptions);\n        return undefined;\n      };\n\n      const startNavigationCallback = (startSpanOptions: StartSpanOptions): undefined => {\n        startBrowserTracingNavigationSpan(client, startSpanOptions);\n        return undefined;\n      };\n\n      // eslint-disable-next-line deprecation/deprecation\n      const instrumentation = reactRouterV4Instrumentation(history, routes, matchPath);\n\n      // Now instrument page load & navigation with correct settings\n      instrumentation(startPageloadCallback, instrumentPageLoad, false);\n      instrumentation(startNavigationCallback, false, instrumentNavigation);\n    },\n  };\n}\n\n/**\n * A browser tracing integration that uses React Router v5 to instrument navigations.\n * Expects `history` (and optionally `routes` and `matchPath`) to be passed as options.\n */\nexport function reactRouterV5BrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] & ReactRouterOptions,\n): Integration {\n  const integration = browserTracingIntegration({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  const { history, routes, matchPath } = options;\n\n  return {\n    ...integration,\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      const startPageloadCallback = (startSpanOptions: StartSpanOptions): undefined => {\n        startBrowserTracingPageLoadSpan(client, startSpanOptions);\n        return undefined;\n      };\n\n      const startNavigationCallback = (startSpanOptions: StartSpanOptions): undefined => {\n        startBrowserTracingNavigationSpan(client, startSpanOptions);\n        return undefined;\n      };\n\n      // eslint-disable-next-line deprecation/deprecation\n      const instrumentation = reactRouterV5Instrumentation(history, routes, matchPath);\n\n      // Now instrument page load & navigation with correct settings\n      instrumentation(startPageloadCallback, options.instrumentPageLoad, false);\n      instrumentation(startNavigationCallback, false, options.instrumentNavigation);\n    },\n  };\n}\n\n/**\n * @deprecated Use `browserTracingReactRouterV4()` instead.\n */\nexport function reactRouterV4Instrumentation(\n  history: RouterHistory,\n  routes?: RouteConfig[],\n  matchPath?: MatchPath,\n): ReactRouterInstrumentation {\n  return createReactRouterInstrumentation(history, 'reactrouter_v4', routes, matchPath);\n}\n\n/**\n * @deprecated Use `browserTracingReactRouterV5()` instead.\n */\nexport function reactRouterV5Instrumentation(\n  history: RouterHistory,\n  routes?: RouteConfig[],\n  matchPath?: MatchPath,\n): ReactRouterInstrumentation {\n  return createReactRouterInstrumentation(history, 'reactrouter_v5', routes, matchPath);\n}\n\nfunction createReactRouterInstrumentation(\n  history: RouterHistory,\n  instrumentationName: string,\n  allRoutes: RouteConfig[] = [],\n  matchPath?: MatchPath,\n): ReactRouterInstrumentation {\n  function getInitPathName(): string | undefined {\n    if (history && history.location) {\n      return history.location.pathname;\n    }\n\n    if (WINDOW && WINDOW.location) {\n      return WINDOW.location.pathname;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Normalizes a transaction name. Returns the new name as well as the\n   * source of the transaction.\n   *\n   * @param pathname The initial pathname we normalize\n   */\n  function normalizeTransactionName(pathname: string): [string, TransactionSource] {\n    if (allRoutes.length === 0 || !matchPath) {\n      return [pathname, 'url'];\n    }\n\n    const branches = matchRoutes(allRoutes, pathname, matchPath);\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let x = 0; x < branches.length; x++) {\n      if (branches[x].match.isExact) {\n        return [branches[x].match.path, 'route'];\n      }\n    }\n\n    return [pathname, 'url'];\n  }\n\n  return (customStartTransaction, startTransactionOnPageLoad = true, startTransactionOnLocationChange = true): void => {\n    const initPathName = getInitPathName();\n\n    if (startTransactionOnPageLoad && initPathName) {\n      const [name, source] = normalizeTransactionName(initPathName);\n      activeTransaction = customStartTransaction({\n        name,\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: `auto.pageload.react.${instrumentationName}`,\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n        },\n      });\n    }\n\n    if (startTransactionOnLocationChange && history.listen) {\n      history.listen((location, action) => {\n        if (action && (action === 'PUSH' || action === 'POP')) {\n          if (activeTransaction) {\n            activeTransaction.end();\n          }\n\n          const [name, source] = normalizeTransactionName(location.pathname);\n          activeTransaction = customStartTransaction({\n            name,\n            attributes: {\n              [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n              [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: `auto.navigation.react.${instrumentationName}`,\n              [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n            },\n          });\n        }\n      });\n    }\n  };\n}\n\n/**\n * Matches a set of routes to a pathname\n * Based on implementation from\n */\nfunction matchRoutes(\n  routes: RouteConfig[],\n  pathname: string,\n  matchPath: MatchPath,\n  branch: Array<{ route: RouteConfig; match: Match }> = [],\n): Array<{ route: RouteConfig; match: Match }> {\n  routes.some(route => {\n    const match = route.path\n      ? matchPath(pathname, route)\n      : branch.length\n        ? branch[branch.length - 1].match // use parent match\n        : computeRootMatch(pathname); // use default \"root\" match\n\n    if (match) {\n      branch.push({ route, match });\n\n      if (route.routes) {\n        matchRoutes(route.routes, pathname, matchPath, branch);\n      }\n    }\n\n    return !!match;\n  });\n\n  return branch;\n}\n\nfunction computeRootMatch(pathname: string): Match {\n  return { path: '/', url: '/', params: {}, isExact: pathname === '/' };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\nexport function withSentryRouting<P extends Record<string, any>, R extends React.ComponentType<P>>(Route: R): R {\n  const componentDisplayName = (Route as any).displayName || (Route as any).name;\n\n  const WrappedRoute: React.FC<P> = (props: P) => {\n    if (props && props.computedMatch && props.computedMatch.isExact) {\n      const route = props.computedMatch.path;\n      const activeRootSpan = getActiveRootSpan();\n      if (activeRootSpan) {\n        activeRootSpan.updateName(route);\n        activeRootSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'route');\n      }\n    }\n\n    // @ts-expect-error Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params:\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/13dc4235c069e25fe7ee16e11f529d909f9f3ff8/types/react-router/index.d.ts#L154-L164\n    return <Route {...props} />;\n  };\n\n  WrappedRoute.displayName = `sentryRoute(${componentDisplayName})`;\n  hoistNonReactStatics(WrappedRoute, Route);\n  // @ts-expect-error Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params:\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/13dc4235c069e25fe7ee16e11f529d909f9f3ff8/types/react-router/index.d.ts#L154-L164\n  return WrappedRoute;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n\nfunction getActiveRootSpan(): Span | undefined {\n  // Legacy behavior for \"old\" react router instrumentation\n  if (activeTransaction) {\n    return activeTransaction;\n  }\n\n  const span = getActiveSpan();\n  const rootSpan = span ? getRootSpan(span) : undefined;\n\n  if (!rootSpan) {\n    return undefined;\n  }\n\n  const op = spanToJSON(rootSpan).op;\n\n  // Only use this root span if it is a pageload or navigation span\n  return op === 'navigation' || op === 'pageload' ? rootSpan : undefined;\n}\n", "/* eslint-disable max-lines */\n// Inspired from Donnie McNeal's solution:\n// https://gist.github.com/wontondon/e8c4bdf2888875e4c755712e99279536\n\nimport {\n  WINDOW,\n  browserTracingIntegration,\n  startBrowserTracingNavigationSpan,\n  startBrowserTracingPageLoadSpan,\n} from '@sentry/browser';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  getActiveSpan,\n  getRootSpan,\n  spanToJSON,\n} from '@sentry/core';\nimport type {\n  Integration,\n  Span,\n  StartSpanOptions,\n  Transaction,\n  TransactionContext,\n  TransactionSource,\n} from '@sentry/types';\nimport { getNumberOfUrlSegments, logger } from '@sentry/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport type {\n  Action,\n  AgnosticDataRouteMatch,\n  CreateRouterFunction,\n  CreateRoutesFromChildren,\n  Location,\n  MatchRoutes,\n  RouteMatch,\n  RouteObject,\n  Router,\n  RouterState,\n  UseEffect,\n  UseLocation,\n  UseNavigationType,\n  UseRoutes,\n} from './types';\n\nlet activeTransaction: Transaction | undefined;\n\nlet _useEffect: UseEffect;\nlet _useLocation: UseLocation;\nlet _useNavigationType: UseNavigationType;\nlet _createRoutesFromChildren: CreateRoutesFromChildren;\nlet _matchRoutes: MatchRoutes;\nlet _customStartTransaction: (context: TransactionContext) => Transaction | undefined;\nlet _startTransactionOnLocationChange: boolean;\nlet _stripBasename: boolean = false;\n\ninterface ReactRouterOptions {\n  useEffect: UseEffect;\n  useLocation: UseLocation;\n  useNavigationType: UseNavigationType;\n  createRoutesFromChildren: CreateRoutesFromChildren;\n  matchRoutes: MatchRoutes;\n  stripBasename?: boolean;\n}\n\n/**\n * A browser tracing integration that uses React Router v3 to instrument navigations.\n * Expects `history` (and optionally `routes` and `matchPath`) to be passed as options.\n */\nexport function reactRouterV6BrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] & ReactRouterOptions,\n): Integration {\n  const integration = browserTracingIntegration({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  const {\n    useEffect,\n    useLocation,\n    useNavigationType,\n    createRoutesFromChildren,\n    matchRoutes,\n    stripBasename,\n    instrumentPageLoad = true,\n    instrumentNavigation = true,\n  } = options;\n\n  return {\n    ...integration,\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      const startNavigationCallback = (startSpanOptions: StartSpanOptions): undefined => {\n        startBrowserTracingNavigationSpan(client, startSpanOptions);\n        return undefined;\n      };\n\n      const initPathName = WINDOW && WINDOW.location && WINDOW.location.pathname;\n      if (instrumentPageLoad && initPathName) {\n        startBrowserTracingPageLoadSpan(client, {\n          name: initPathName,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n            [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.react.reactrouter_v6',\n          },\n        });\n      }\n\n      _useEffect = useEffect;\n      _useLocation = useLocation;\n      _useNavigationType = useNavigationType;\n      _matchRoutes = matchRoutes;\n      _createRoutesFromChildren = createRoutesFromChildren;\n      _stripBasename = stripBasename || false;\n\n      _customStartTransaction = startNavigationCallback;\n      _startTransactionOnLocationChange = instrumentNavigation;\n    },\n  };\n}\n\n/**\n * @deprecated Use `reactRouterV6BrowserTracingIntegration()` instead.\n */\nexport function reactRouterV6Instrumentation(\n  useEffect: UseEffect,\n  useLocation: UseLocation,\n  useNavigationType: UseNavigationType,\n  createRoutesFromChildren: CreateRoutesFromChildren,\n  matchRoutes: MatchRoutes,\n  stripBasename?: boolean,\n) {\n  return (\n    customStartTransaction: (context: TransactionContext) => Transaction | undefined,\n    startTransactionOnPageLoad = true,\n    startTransactionOnLocationChange = true,\n  ): void => {\n    const initPathName = WINDOW && WINDOW.location && WINDOW.location.pathname;\n    if (startTransactionOnPageLoad && initPathName) {\n      activeTransaction = customStartTransaction({\n        name: initPathName,\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n          [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.react.reactrouter_v6',\n        },\n      });\n    }\n\n    _useEffect = useEffect;\n    _useLocation = useLocation;\n    _useNavigationType = useNavigationType;\n    _matchRoutes = matchRoutes;\n    _createRoutesFromChildren = createRoutesFromChildren;\n    _stripBasename = stripBasename || false;\n\n    _customStartTransaction = customStartTransaction;\n    _startTransactionOnLocationChange = startTransactionOnLocationChange;\n  };\n}\n\n/**\n * Strip the basename from a pathname if exists.\n *\n * Vendored and modified from `react-router`\n * https://github.com/remix-run/react-router/blob/462bb712156a3f739d6139a0f14810b76b002df6/packages/router/utils.ts#L1038\n */\nfunction stripBasenameFromPathname(pathname: string, basename: string): string {\n  if (!basename || basename === '/') {\n    return pathname;\n  }\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return pathname;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  const startIndex = basename.endsWith('/') ? basename.length - 1 : basename.length;\n  const nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== '/') {\n    // pathname does not start with basename/\n    return pathname;\n  }\n\n  return pathname.slice(startIndex) || '/';\n}\n\nfunction getNormalizedName(\n  routes: RouteObject[],\n  location: Location,\n  branches: RouteMatch[],\n  basename: string = '',\n): [string, TransactionSource] {\n  if (!routes || routes.length === 0) {\n    return [_stripBasename ? stripBasenameFromPathname(location.pathname, basename) : location.pathname, 'url'];\n  }\n\n  let pathBuilder = '';\n  if (branches) {\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let x = 0; x < branches.length; x++) {\n      const branch = branches[x];\n      const route = branch.route;\n      if (route) {\n        // Early return if index route\n        if (route.index) {\n          return [_stripBasename ? stripBasenameFromPathname(branch.pathname, basename) : branch.pathname, 'route'];\n        }\n\n        const path = route.path;\n        if (path) {\n          const newPath = path[0] === '/' || pathBuilder[pathBuilder.length - 1] === '/' ? path : `/${path}`;\n          pathBuilder += newPath;\n\n          if (basename + branch.pathname === location.pathname) {\n            if (\n              // If the route defined on the element is something like\n              // <Route path=\"/stores/:storeId/products/:productId\" element={<div>Product</div>} />\n              // We should check against the branch.pathname for the number of / seperators\n              getNumberOfUrlSegments(pathBuilder) !== getNumberOfUrlSegments(branch.pathname) &&\n              // We should not count wildcard operators in the url segments calculation\n              pathBuilder.slice(-2) !== '/*'\n            ) {\n              return [(_stripBasename ? '' : basename) + newPath, 'route'];\n            }\n            return [(_stripBasename ? '' : basename) + pathBuilder, 'route'];\n          }\n        }\n      }\n    }\n  }\n\n  return [_stripBasename ? stripBasenameFromPathname(location.pathname, basename) : location.pathname, 'url'];\n}\n\nfunction updatePageloadTransaction(\n  activeRootSpan: Span | undefined,\n  location: Location,\n  routes: RouteObject[],\n  matches?: AgnosticDataRouteMatch,\n  basename?: string,\n): void {\n  const branches = Array.isArray(matches)\n    ? matches\n    : (_matchRoutes(routes, location, basename) as unknown as RouteMatch[]);\n\n  if (activeRootSpan && branches) {\n    const [name, source] = getNormalizedName(routes, location, branches, basename);\n    activeRootSpan.updateName(name);\n    activeRootSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, source);\n  }\n}\n\nfunction handleNavigation(\n  location: Location,\n  routes: RouteObject[],\n  navigationType: Action,\n  matches?: AgnosticDataRouteMatch,\n  basename?: string,\n): void {\n  const branches = Array.isArray(matches) ? matches : _matchRoutes(routes, location, basename);\n\n  if (_startTransactionOnLocationChange && (navigationType === 'PUSH' || navigationType === 'POP') && branches) {\n    if (activeTransaction) {\n      activeTransaction.end();\n    }\n\n    const [name, source] = getNormalizedName(routes, location, branches, basename);\n    activeTransaction = _customStartTransaction({\n      name,\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n        [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.react.reactrouter_v6',\n      },\n    });\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function withSentryReactRouterV6Routing<P extends Record<string, any>, R extends React.FC<P>>(Routes: R): R {\n  if (\n    !_useEffect ||\n    !_useLocation ||\n    !_useNavigationType ||\n    !_createRoutesFromChildren ||\n    !_matchRoutes ||\n    !_customStartTransaction\n  ) {\n    DEBUG_BUILD &&\n      logger.warn(`reactRouterV6Instrumentation was unable to wrap Routes because of one or more missing parameters.\n      useEffect: ${_useEffect}. useLocation: ${_useLocation}. useNavigationType: ${_useNavigationType}.\n      createRoutesFromChildren: ${_createRoutesFromChildren}. matchRoutes: ${_matchRoutes}. customStartTransaction: ${_customStartTransaction}.`);\n\n    return Routes;\n  }\n\n  let isMountRenderPass: boolean = true;\n\n  const SentryRoutes: React.FC<P> = (props: P) => {\n    const location = _useLocation();\n    const navigationType = _useNavigationType();\n\n    _useEffect(\n      () => {\n        const routes = _createRoutesFromChildren(props.children) as RouteObject[];\n\n        if (isMountRenderPass) {\n          updatePageloadTransaction(getActiveRootSpan(), location, routes);\n          isMountRenderPass = false;\n        } else {\n          handleNavigation(location, routes, navigationType);\n        }\n      },\n      // `props.children` is purpusely not included in the dependency array, because we do not want to re-run this effect\n      // when the children change. We only want to start transactions when the location or navigation type change.\n      [location, navigationType],\n    );\n\n    // @ts-expect-error Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params\n    return <Routes {...props} />;\n  };\n\n  hoistNonReactStatics(SentryRoutes, Routes);\n\n  // @ts-expect-error Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params\n  return SentryRoutes;\n}\n\nexport function wrapUseRoutes(origUseRoutes: UseRoutes): UseRoutes {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_matchRoutes || !_customStartTransaction) {\n    DEBUG_BUILD &&\n      logger.warn(\n        'reactRouterV6Instrumentation was unable to wrap `useRoutes` because of one or more missing parameters.',\n      );\n\n    return origUseRoutes;\n  }\n\n  let isMountRenderPass: boolean = true;\n\n  const SentryRoutes: React.FC<{\n    children?: React.ReactNode;\n    routes: RouteObject[];\n    locationArg?: Partial<Location> | string;\n  }> = (props: { children?: React.ReactNode; routes: RouteObject[]; locationArg?: Partial<Location> | string }) => {\n    const { routes, locationArg } = props;\n\n    const Routes = origUseRoutes(routes, locationArg);\n\n    const location = _useLocation();\n    const navigationType = _useNavigationType();\n\n    // A value with stable identity to either pick `locationArg` if available or `location` if not\n    const stableLocationParam =\n      typeof locationArg === 'string' || (locationArg && locationArg.pathname)\n        ? (locationArg as { pathname: string })\n        : location;\n\n    _useEffect(() => {\n      const normalizedLocation =\n        typeof stableLocationParam === 'string' ? { pathname: stableLocationParam } : stableLocationParam;\n\n      if (isMountRenderPass) {\n        updatePageloadTransaction(getActiveRootSpan(), normalizedLocation, routes);\n        isMountRenderPass = false;\n      } else {\n        handleNavigation(normalizedLocation, routes, navigationType);\n      }\n    }, [navigationType, stableLocationParam]);\n\n    return Routes;\n  };\n\n  // eslint-disable-next-line react/display-name\n  return (routes: RouteObject[], locationArg?: Partial<Location> | string): React.ReactElement | null => {\n    return <SentryRoutes routes={routes} locationArg={locationArg} />;\n  };\n}\n\nexport function wrapCreateBrowserRouter<\n  TState extends RouterState = RouterState,\n  TRouter extends Router<TState> = Router<TState>,\n>(createRouterFunction: CreateRouterFunction<TState, TRouter>): CreateRouterFunction<TState, TRouter> {\n  // `opts` for createBrowserHistory and createMemoryHistory are different, but also not relevant for us at the moment.\n  // `basename` is the only option that is relevant for us, and it is the same for all.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (routes: RouteObject[], opts?: Record<string, any> & { basename?: string }): TRouter {\n    const router = createRouterFunction(routes, opts);\n    const basename = opts && opts.basename;\n\n    const activeRootSpan = getActiveRootSpan();\n\n    // The initial load ends when `createBrowserRouter` is called.\n    // This is the earliest convenient time to update the transaction name.\n    // Callbacks to `router.subscribe` are not called for the initial load.\n    if (router.state.historyAction === 'POP' && activeRootSpan) {\n      updatePageloadTransaction(activeRootSpan, router.state.location, routes, undefined, basename);\n    }\n\n    router.subscribe((state: RouterState) => {\n      const location = state.location;\n      if (_startTransactionOnLocationChange && (state.historyAction === 'PUSH' || state.historyAction === 'POP')) {\n        handleNavigation(location, routes, state.historyAction, undefined, basename);\n      }\n    });\n\n    return router;\n  };\n}\n\nfunction getActiveRootSpan(): Span | undefined {\n  // Legacy behavior for \"old\" react router instrumentation\n  if (activeTransaction) {\n    return activeTransaction;\n  }\n\n  const span = getActiveSpan();\n  const rootSpan = span ? getRootSpan(span) : undefined;\n\n  if (!rootSpan) {\n    return undefined;\n  }\n\n  const op = spanToJSON(rootSpan).op;\n\n  // Only use this root span if it is a pageload or navigation span\n  return op === 'navigation' || op === 'pageload' ? rootSpan : undefined;\n}\n"],
  "mappings": "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",
  "names": ["init", "browserInit", "hoistNonReactStatics", "_jsxFileName", "version", "UNKNOWN_COMPONENT", "error", "cause", "hoistNonReactStatics", "options", "startTransaction", "activeTransaction", "_jsxFileName", "normalizeTransactionName", "hoistNonReactStatics", "_jsxFileName", "activeTransaction", "useEffect", "matchRoutes", "getActiveRootSpan", "hoistNonReactStatics"]
}
