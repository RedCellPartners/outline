{"version":3,"file":"react-virtual.production.min.js","sources":["../node_modules/@reach/observe-rect/dist/observe-rect.esm.js","../src/useIsomorphicLayoutEffect.js","../src/useRect.js","../src/index.js"],"sourcesContent":["var props = ['bottom', 'height', 'left', 'right', 'top', 'width'];\n\nvar rectChanged = function rectChanged(a, b) {\n  if (a === void 0) {\n    a = {};\n  }\n\n  if (b === void 0) {\n    b = {};\n  }\n\n  return props.some(function (prop) {\n    return a[prop] !== b[prop];\n  });\n};\n\nvar observedNodes =\n/*#__PURE__*/\nnew Map();\nvar rafId;\n\nvar run = function run() {\n  var changedStates = [];\n  observedNodes.forEach(function (state, node) {\n    var newRect = node.getBoundingClientRect();\n\n    if (rectChanged(newRect, state.rect)) {\n      state.rect = newRect;\n      changedStates.push(state);\n    }\n  });\n  changedStates.forEach(function (state) {\n    state.callbacks.forEach(function (cb) {\n      return cb(state.rect);\n    });\n  });\n  rafId = window.requestAnimationFrame(run);\n};\n\nfunction observeRect(node, cb) {\n  return {\n    observe: function observe() {\n      var wasEmpty = observedNodes.size === 0;\n\n      if (observedNodes.has(node)) {\n        observedNodes.get(node).callbacks.push(cb);\n      } else {\n        observedNodes.set(node, {\n          rect: undefined,\n          hasRectChanged: false,\n          callbacks: [cb]\n        });\n      }\n\n      if (wasEmpty) run();\n    },\n    unobserve: function unobserve() {\n      var state = observedNodes.get(node);\n\n      if (state) {\n        // Remove the callback\n        var index = state.callbacks.indexOf(cb);\n        if (index >= 0) state.callbacks.splice(index, 1); // Remove the node reference\n\n        if (!state.callbacks.length) observedNodes[\"delete\"](node); // Stop the loop\n\n        if (!observedNodes.size) cancelAnimationFrame(rafId);\n      }\n    }\n  };\n}\n\nexport default observeRect;\n//# sourceMappingURL=observe-rect.esm.js.map\n","import React from 'react'\n\nexport default typeof window !== 'undefined'\n  ? React.useLayoutEffect\n  : React.useEffect\n","import React from 'react'\n\nimport observeRect from '@reach/observe-rect'\n\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nexport default function useRect(nodeRef) {\n  const [element, setElement] = React.useState(nodeRef.current)\n  const [rect, dispatch] = React.useReducer(rectReducer, null)\n  const initialRectSet = React.useRef(false)\n\n  useIsomorphicLayoutEffect(() => {\n    if (nodeRef.current !== element) {\n      setElement(nodeRef.current)\n    }\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    if (element && !initialRectSet.current) {\n      initialRectSet.current = true\n      const rect = element.getBoundingClientRect();\n      dispatch({ rect });\n    }\n  }, [element])\n\n  React.useEffect(() => {\n    if (!element) {\n      return\n    }\n\n    const observer = observeRect(element, rect => {\n      dispatch({ rect });\n    });\n\n    observer.observe()\n\n    return () => {\n      observer.unobserve()\n    }\n  }, [element])\n\n  return rect\n}\n\nfunction rectReducer(state, action) {\n  const rect = action.rect\n  if (!state || state.height !== rect.height || state.width !== rect.width) {\n    return rect\n  }\n  return state\n}\n\n","import React from 'react'\n\nimport useRect from './useRect'\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nconst defaultEstimateSize = () => 50\n\nconst defaultKeyExtractor = index => index\n\nconst defaultMeasureSize = (el, horizontal) => {\n  const key = horizontal ? 'offsetWidth' : 'offsetHeight'\n\n  return el[key]\n}\n\nexport const defaultRangeExtractor = range => {\n  const start = Math.max(range.start - range.overscan, 0)\n  const end = Math.min(range.end + range.overscan, range.size - 1)\n\n  const arr = []\n\n  for (let i = start; i <= end; i++) {\n    arr.push(i)\n  }\n\n  return arr\n}\n\nexport function useVirtual({\n  size = 0,\n  estimateSize = defaultEstimateSize,\n  overscan = 1,\n  paddingStart = 0,\n  paddingEnd = 0,\n  parentRef,\n  horizontal,\n  scrollToFn,\n  useObserver,\n  onScrollElement,\n  scrollOffsetFn,\n  keyExtractor = defaultKeyExtractor,\n  measureSize = defaultMeasureSize,\n  rangeExtractor = defaultRangeExtractor,\n}) {\n  const sizeKey = horizontal ? 'width' : 'height'\n  const scrollKey = horizontal ? 'scrollLeft' : 'scrollTop'\n  const latestRef = React.useRef({\n    scrollOffset: 0,\n    measurements: [],\n  })\n  const useMeasureParent = useObserver || useRect\n\n  const { [sizeKey]: outerSize } = useMeasureParent(parentRef) || {\n    [sizeKey]: 0,\n  }\n  latestRef.current.outerSize = outerSize\n\n  const defaultScrollToFn = React.useCallback(\n    offset => {\n      if (parentRef.current) {\n        parentRef.current[scrollKey] = offset\n      }\n    },\n    [parentRef, scrollKey]\n  )\n\n  const resolvedScrollToFn = scrollToFn || defaultScrollToFn\n\n  scrollToFn = React.useCallback(\n    offset => {\n      resolvedScrollToFn(offset, defaultScrollToFn)\n    },\n    [defaultScrollToFn, resolvedScrollToFn]\n  )\n\n  const [measuredCache, setMeasuredCache] = React.useState({})\n\n  const measure = React.useCallback(() => setMeasuredCache({}), [])\n\n  const pendingMeasuredCacheIndexesRef = React.useRef([])\n\n  const measurements = React.useMemo(() => {\n    const min =\n      pendingMeasuredCacheIndexesRef.current.length > 0\n        ? Math.min(...pendingMeasuredCacheIndexesRef.current)\n        : 0\n    pendingMeasuredCacheIndexesRef.current = []\n\n    const measurements = latestRef.current.measurements.slice(0, min)\n\n    for (let i = min; i < size; i++) {\n      const key = keyExtractor(i)\n      const measuredSize = measuredCache[key]\n      const start = measurements[i - 1] ? measurements[i - 1].end : paddingStart\n      const size =\n        typeof measuredSize === 'number' ? measuredSize : estimateSize(i)\n      const end = start + size\n      measurements[i] = { index: i, start, size, end, key }\n    }\n    return measurements\n  }, [estimateSize, measuredCache, paddingStart, size, keyExtractor])\n\n  const totalSize = (measurements[size - 1]?.end || 0) + paddingEnd\n\n  latestRef.current.measurements = measurements\n  latestRef.current.totalSize = totalSize\n\n  const [range, setRange] = React.useState({ start: 0, end: 0 })\n\n  const element = onScrollElement ? onScrollElement.current : parentRef.current\n\n  const scrollOffsetFnRef = React.useRef(scrollOffsetFn)\n  scrollOffsetFnRef.current = scrollOffsetFn\n\n  const rangeTimeoutIdRef = React.useRef(null)\n\n  const cancelAsyncRange = React.useCallback(() => {\n    if (rangeTimeoutIdRef.current !== null) {\n      clearTimeout(rangeTimeoutIdRef.current)\n      rangeTimeoutIdRef.current = null\n    }\n  }, [])\n\n  useIsomorphicLayoutEffect(() => {\n    rangeTimeoutIdRef.current = setTimeout(() => {\n      setRange(prevRange => calculateRange(latestRef.current, prevRange))\n    })\n    return () => cancelAsyncRange()\n  }, [measurements, outerSize, cancelAsyncRange])\n\n  useIsomorphicLayoutEffect(() => {\n    if (!element) {\n      setRange({ start: 0, end: 0 })\n      latestRef.current.scrollOffset = 0\n\n      return\n    }\n\n    const onScroll = event => {\n      const scrollOffset = scrollOffsetFnRef.current\n        ? scrollOffsetFnRef.current(event)\n        : element[scrollKey]\n\n      latestRef.current.scrollOffset = scrollOffset\n\n      cancelAsyncRange()\n      setRange(prevRange => calculateRange(latestRef.current, prevRange))\n    }\n\n    // Determine initially visible range\n    onScroll()\n\n    element.addEventListener('scroll', onScroll, {\n      capture: false,\n      passive: true,\n    })\n\n    return () => {\n      element.removeEventListener('scroll', onScroll)\n    }\n  }, [element, scrollKey, cancelAsyncRange])\n\n  const measureSizeRef = React.useRef(measureSize)\n  measureSizeRef.current = measureSize\n\n  const virtualItems = React.useMemo(() => {\n    const indexes = rangeExtractor({\n      start: range.start,\n      end: range.end,\n      overscan,\n      size: measurements.length,\n    })\n\n    const virtualItems = []\n\n    for (let k = 0, len = indexes.length; k < len; k++) {\n      const i = indexes[k]\n      const measurement = measurements[i]\n\n      const item = {\n        ...measurement,\n        measureRef: el => {\n          if (el) {\n            const measuredSize = measureSizeRef.current(el, horizontal)\n\n            if (measuredSize !== item.size) {\n              const { scrollOffset } = latestRef.current\n\n              if (item.start < scrollOffset) {\n                defaultScrollToFn(scrollOffset + (measuredSize - item.size))\n              }\n\n              pendingMeasuredCacheIndexesRef.current.push(i)\n\n              setMeasuredCache(old => ({\n                ...old,\n                [item.key]: measuredSize,\n              }))\n            }\n          }\n        },\n      }\n\n      virtualItems.push(item)\n    }\n\n    return virtualItems\n  }, [\n    defaultScrollToFn,\n    horizontal,\n    measurements,\n    overscan,\n    range.end,\n    range.start,\n    rangeExtractor,\n  ])\n\n  const mountedRef = React.useRef()\n\n  useIsomorphicLayoutEffect(() => {\n    if (mountedRef.current) {\n      if (estimateSize) setMeasuredCache({})\n    }\n    mountedRef.current = true\n  }, [estimateSize])\n\n  const scrollToOffset = React.useCallback(\n    (toOffset, { align = 'start' } = {}) => {\n      const { scrollOffset, outerSize } = latestRef.current\n\n      if (align === 'auto') {\n        if (toOffset <= scrollOffset) {\n          align = 'start'\n        } else if (toOffset >= scrollOffset + outerSize) {\n          align = 'end'\n        } else {\n          align = 'start'\n        }\n      }\n\n      if (align === 'start') {\n        scrollToFn(toOffset)\n      } else if (align === 'end') {\n        scrollToFn(toOffset - outerSize)\n      } else if (align === 'center') {\n        scrollToFn(toOffset - outerSize / 2)\n      }\n    },\n    [scrollToFn]\n  )\n\n  const tryScrollToIndex = React.useCallback(\n    (index, { align = 'auto', ...rest } = {}) => {\n      const { measurements, scrollOffset, outerSize } = latestRef.current\n\n      const measurement = measurements[Math.max(0, Math.min(index, size - 1))]\n\n      if (!measurement) {\n        return\n      }\n\n      if (align === 'auto') {\n        if (measurement.end >= scrollOffset + outerSize) {\n          align = 'end'\n        } else if (measurement.start <= scrollOffset) {\n          align = 'start'\n        } else {\n          return\n        }\n      }\n\n      const toOffset =\n        align === 'center'\n          ? measurement.start + measurement.size / 2\n          : align === 'end'\n          ? measurement.end\n          : measurement.start\n\n      scrollToOffset(toOffset, { align, ...rest })\n    },\n    [scrollToOffset, size]\n  )\n\n  const scrollToIndex = React.useCallback(\n    (...args) => {\n      // We do a double request here because of\n      // dynamic sizes which can cause offset shift\n      // and end up in the wrong spot. Unfortunately,\n      // we can't know about those dynamic sizes until\n      // we try and render them. So double down!\n      tryScrollToIndex(...args)\n      requestAnimationFrame(() => {\n        tryScrollToIndex(...args)\n      })\n    },\n    [tryScrollToIndex]\n  )\n\n  return {\n    virtualItems,\n    totalSize,\n    scrollToOffset,\n    scrollToIndex,\n    measure,\n  }\n}\n\nconst findNearestBinarySearch = (low, high, getCurrentValue, value) => {\n  while (low <= high) {\n    let middle = ((low + high) / 2) | 0\n    let currentValue = getCurrentValue(middle)\n\n    if (currentValue < value) {\n      low = middle + 1\n    } else if (currentValue > value) {\n      high = middle - 1\n    } else {\n      return middle\n    }\n  }\n\n  if (low > 0) {\n    return low - 1\n  } else {\n    return 0\n  }\n}\n\nfunction calculateRange({ measurements, outerSize, scrollOffset }, prevRange) {\n  const size = measurements.length - 1\n  const getOffset = index => measurements[index].start\n\n  let start = findNearestBinarySearch(0, size, getOffset, scrollOffset)\n  let end = start\n\n  while (end < size && measurements[end].end < scrollOffset + outerSize) {\n    end++\n  }\n\n  if (prevRange.start !== start || prevRange.end !== end) {\n    return { start, end }\n  }\n\n  return prevRange\n}\n"],"names":["rafId","props","observedNodes","Map","run","changedStates","state","node","a","b","newRect","getBoundingClientRect","rect","some","prop","cb","window","React","useLayoutEffect","useEffect","useRect","nodeRef","useState","current","element","setElement","useReducer","rectReducer","dispatch","initialRectSet","useRef","useIsomorphicLayoutEffect","observer","observe","wasEmpty","undefined","hasRectChanged","callbacks","unobserve","index","length","size","cancelAnimationFrame","action","height","width","defaultEstimateSize","defaultKeyExtractor","defaultMeasureSize","el","horizontal","defaultRangeExtractor","range","start","Math","max","overscan","end","min","arr","i","push","calculateRange","prevRange","measurements","outerSize","scrollOffset","low","high","getCurrentValue","value","middle","currentValue","findNearestBinarySearch","estimateSize","paddingStart","paddingEnd","parentRef","scrollToFn","useObserver","onScrollElement","scrollOffsetFn","keyExtractor","measureSize","rangeExtractor","sizeKey","scrollKey","latestRef","defaultScrollToFn","useCallback","offset","resolvedScrollToFn","measuredCache","setMeasuredCache","measure","pendingMeasuredCacheIndexesRef","useMemo","slice","key","measuredSize","totalSize","setRange","scrollOffsetFnRef","rangeTimeoutIdRef","cancelAsyncRange","clearTimeout","setTimeout","onScroll","event","addEventListener","capture","passive","removeEventListener","measureSizeRef","virtualItems","indexes","k","len","item","measureRef","old","mountedRef","scrollToOffset","toOffset","align","tryScrollToIndex","rest","measurement","scrollToIndex","args","requestAnimationFrame"],"mappings":"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"}